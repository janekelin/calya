{"version":3,"sources":["components/Button.js","strings.js","components/Calculator.js","components/Header.js","components/App.js","index.js"],"names":["Button","props","display","data","value","class","react_default","a","createElement","className","onClick","str","calculatorButtons","customMessage","C","0","1","2","3","4","5","6","7","8","9","+","-","*","/",".","=","defaultMessage","subtitle","title","Calculator","buttons","map","item","index","components_Button","key","id","Header","headerMessage","INITIAL_STATE","currentNum","numbers","operators","result","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","calculateResult","bind","assertThisInitialized","clear","handleClick","saveOperation","updateCurrentNumber","updateDisplay","_this$state","length","realNumbers","i","parseFloat","push","temp","isFinite","setState","toString","e","target","innerText","ops","prevState","concat","toConsumableArray","num","_this$state2","components_Header","components_Calculator","Component","root","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.f52d6cf2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Button = props => {\r\n  let display = props.data.value;\r\n\r\n  /*\r\n    if we get a new value to display from App's state, \r\n    the display of the result should be updated accordingly\r\n  */\r\n  if (props.data.class === \"result\" && props.display) {\r\n    display = props.display;\r\n  }\r\n\r\n  return (\r\n    <button className={props.data.class} onClick={props.onClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","const str = {\r\n  calculatorButtons: [\r\n    {\r\n      class: \"clear\",\r\n      value: \"C\"\r\n    },\r\n    {\r\n      class: \"result\",\r\n      value: \"0\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"7\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"8\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"9\"\r\n    },\r\n    {\r\n      class: \"ops\",\r\n      value: \"+\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"4\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"5\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"6\"\r\n    },\r\n    {\r\n      class: \"ops\",\r\n      value: \"-\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"1\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"2\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"3\"\r\n    },\r\n    {\r\n      class: \"ops\",\r\n      value: \"*\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \"0\"\r\n    },\r\n    {\r\n      class: \"num\",\r\n      value: \".\"\r\n    },\r\n    {\r\n      class: \"equals\",\r\n      value: \"=\"\r\n    },\r\n    {\r\n      class: \"ops\",\r\n      value: \"/\"\r\n    }\r\n  ],\r\n  customMessage: {\r\n    C: \"Cancel all operations, tell your friends to cool it...\",\r\n    \"0\": \"At a point below zero there's no place left to go...\",\r\n    \"1\": \"One is the loneliest number that you'll ever do...\",\r\n    \"2\":\r\n      \"Two can be as bad as one. It's the loneliest number since the number one...\",\r\n    \"3\": \"Three is a magic number...\",\r\n    \"4\": \"These four walls are closing in on all you had and all you want...\",\r\n    \"5\": \"Give me five minutes more, only five...\",\r\n    \"6\":\r\n      \"I'm waiting for your call and I'm ready to take your six six six in my heart...\",\r\n    \"7\": \"I got seven days to live my life or seven ways to die\",\r\n    \"8\": \"Nothing but love babe eight days a week...\",\r\n    \"9\": \"Life is so incredibly dull, working from nine to five...\",\r\n    \"+\":\r\n      \"It's perfectly clear what you got there. Wouldn't be near enough add 'em all up...\",\r\n    \"-\": \"Subtract the silence of myself...\",\r\n    \"*\": \"Two particles fused and coupled. Once united multiply...\",\r\n    \"/\": \"You go in that team! I go on this team! Divide everything!..\",\r\n    \".\": \"Let's float, let's float!..\",\r\n    \"=\": \"One and one makes two. You and me equals love...\"\r\n  },\r\n  defaultMessage: \"I'm the operator with my pocket calculator...\",\r\n  subtitle: \"an optimistic calculator\",\r\n  title: \"CALya\"\r\n};\r\n\r\nexport default str;\r\n","import Button from \"./Button\";\r\nimport React from \"react\";\r\nimport str from \"./../strings.js\";\r\n\r\nconst Calculator = props => {\r\n  const buttons = str.calculatorButtons.map((item, index) => {\r\n    return (\r\n      <Button\r\n        key={index}\r\n        data={item}\r\n        display={props.display}\r\n        onClick={props.onClick}\r\n      />\r\n    );\r\n  });\r\n\r\n  return (\r\n    <main id=\"calculator\" className=\"calculator\">\r\n      {buttons}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport str from \"./../strings.js\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <h1>{str.title}</h1>\r\n      <h2>{str.subtitle}</h2>\r\n      <p className=\"message\">{props.headerMessage}</p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import Calculator from \"./Calculator\";\r\nimport Header from \"./Header\";\r\nimport React, { Component } from \"react\";\r\nimport str from \"./../strings.js\";\r\n\r\nconst INITIAL_STATE = {\r\n  currentNum: \"\", //string -> for multi-digit input\r\n  headerMessage: str.defaultMessage,\r\n  numbers: [],\r\n  operators: [],\r\n  result: \"\"\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n    this.calculateResult = this.calculateResult.bind(this);\r\n    this.clear = this.clear.bind(this);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.saveOperation = this.saveOperation.bind(this);\r\n    this.updateCurrentNumber = this.updateCurrentNumber.bind(this);\r\n    this.updateDisplay = this.updateDisplay.bind(this);\r\n  }\r\n\r\n  calculateResult() {\r\n    const { currentNum, numbers, operators } = this.state;\r\n\r\n    //No operators -> no calculations\r\n    //At least two numbers required for a calculation - one in a queue and one current\r\n    if (!operators.length || (!numbers.length && !currentNum)) {\r\n      return;\r\n    }\r\n\r\n    //we have at least two numbers and an operator; let's calculate\r\n    const realNumbers = numbers.map(i => parseFloat(i));\r\n    //if we have a current number, add it to the queue\r\n    if (operators.length === numbers.length && currentNum) {\r\n      realNumbers.push(parseFloat(currentNum));\r\n    }\r\n    //perform calculations\r\n    let temp = realNumbers[0];\r\n    for (let i = 0; i < operators.length; i++) {\r\n      if (realNumbers[i + 1]) {\r\n        switch (operators[i]) {\r\n          case \"+\":\r\n            temp += realNumbers[i + 1];\r\n            break;\r\n          case \"-\":\r\n            temp -= realNumbers[i + 1];\r\n            break;\r\n          case \"*\":\r\n            temp *= realNumbers[i + 1];\r\n            break;\r\n          case \"/\":\r\n            temp /= realNumbers[i + 1];\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    //ignore dividing by zero\r\n    if (isFinite(temp)) {\r\n      this.setState({\r\n        numbers: [],\r\n        operators: [],\r\n        result: temp.toString()\r\n      });\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.setState(INITIAL_STATE);\r\n  }\r\n\r\n  handleClick(e) {\r\n    switch (e.target.className) {\r\n      case \"num\":\r\n        this.updateCurrentNumber(e.target.innerText);\r\n        break;\r\n      case \"ops\":\r\n        this.saveOperation(e.target.innerText);\r\n        break;\r\n      case \"equals\":\r\n        this.calculateResult();\r\n        break;\r\n      case \"clear\":\r\n        this.clear();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  saveOperation(ops) {\r\n    if (this.state.currentNum || this.state.numbers.length) {\r\n      this.setState(prevState => ({\r\n        currentNum: \"\",\r\n        headerMessage: str.customMessage[ops],\r\n        numbers: [\r\n          ...prevState.numbers,\r\n          prevState.result ? prevState.result : prevState.currentNum\r\n        ],\r\n        operators: [...prevState.operators, ops],\r\n        result: \"\"\r\n      }));\r\n    }\r\n  }\r\n\r\n  updateCurrentNumber(num) {\r\n    if (this.state.result) {\r\n      this.setState(prevState => {\r\n        return {\r\n          currentNum: num,\r\n          headerMessage: str.customMessage[num],\r\n          numbers: [...prevState.numbers, prevState.result, num],\r\n          result: \"\"\r\n        };\r\n      });\r\n    } else {\r\n      this.setState(prevState => {\r\n        const newNum = prevState.currentNum + num; //string concatenation\r\n        return {\r\n          currentNum: newNum,\r\n          headerMessage: str.customMessage[num]\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  updateDisplay() {\r\n    const { currentNum, numbers, operators } = this.state;\r\n    let display = currentNum;\r\n    if (operators) {\r\n      display = \"\";\r\n      for (let i = 0; i < operators.length; i++) {\r\n        display += `${numbers[i]} ${operators[i]} `;\r\n      }\r\n      if (currentNum) {\r\n        display += currentNum;\r\n      }\r\n    }\r\n    return display;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"App\">\r\n        <Header headerMessage={this.state.headerMessage} />\r\n        <Calculator\r\n          onClick={this.handleClick}\r\n          display={this.state.result ? this.state.result : this.updateDisplay()}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import App from \"./components/App\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles.css\";\r\n\r\nconst root = document.getElementById(\"root\");\r\nReactDOM.render(<App />, root);\r\n"],"sourceRoot":""}